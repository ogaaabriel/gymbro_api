generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 Int             @id @default(autoincrement())
  email              String          @unique
  password           String
  firstName          String
  lastName           String
  profilePictureUrl  String?
  profilePicturePath String?
  tokens             Token[]
  events             Event[]
  isAdmin            Boolean         @default(false)
  isActive           Boolean         @default(true)
  UsersOnEvents      UsersOnEvents[]
}

model Token {
  id          String    @id @unique @default(uuid())
  hashedToken String
  revoked     Boolean   @default(false)
  tokenType   TokenType
  userId      Int
  User        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum TokenType {
  REFRESH
  RESET_PASSWORD
}

model Event {
  id            Int             @id @default(autoincrement())
  title         String
  description   String
  eventDate     DateTime
  isPublic      Boolean         @default(true)
  hasLimit      Boolean         @default(false)
  limitCount    Int?
  isActive      Boolean         @default(true)
  geocode       Float[]
  adminId       Int
  Admin         User            @relation(fields: [adminId], references: [id], onDelete: Cascade)
  UsersOnEvents UsersOnEvents[]
}

model UsersOnEvents {
  eventId Int
  Event   Event @relation(fields: [eventId], references: [id], onDelete: Cascade)
  userId  Int
  User    User  @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([eventId, userId])
}
